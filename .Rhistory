library(openxlsx);library(ggplot2)
bio <- read.xlsx("C://Users/Gerard/Downloads/20221115_Datos Pacientes.xlsx")
bio <- bio[2:nrow(bio),]
bio$SEXO <- ifelse(bio$SEXO == 1, "Man","Woman")
cases <- bio[bio$Status == "Case",]
controls <- bio[bio$Status == "Control",]
cases2 <- cases[,7:ncol(cases)]
cases2
cases2[rowSums(is.na(cases2)) > 6,]
colSums(is.na(bio))
View(cases)
View(cases2)
colSums(is.na(bio))
table(bio$SEXO, bio$Status)
ggplot(data = bio, aes(x = Status, y = age)) +
geom_boxplot()
ggplot(bio, aes(age, colour = Status)) + geom_density()
table(cases$TIPOANEURISMA, useNA = "always")
table(controls$Pathology, useNA = "always")
table(cases$symptomatic, useNA = "always")
sum(is.na(cases$Height_cm))
17/nrow(cases)*100
sum(is.na(cases$Weight_Kg))
range(cases$Weight_Kg, na.rm = T)
ggplot(cases, aes(Weight_Kg)) + geom_density()
table(cases$Smoking, useNA = "always")
table(controls$Smoking, useNA = "always")
table(bio$hypertension, bio$Status, useNA = "always")
table(bio$dyslipidemia, bio$Status, useNA = "always")
table(bio$diabetes.mellitus, bio$Status, useNA = "always")
if(identical(bio[is.na(bio$hypertension),]$Muestra, bio[is.na(bio$dyslipidemia),]$Muestra) == TRUE & identical(bio[is.na(bio$dyslipidemia),]$Muestra, bio[is.na(bio$diabetes.mellitus),]$Muestra) == TRUE){
print("The 19 samples with NAs are the same for Hypertension, Dyslipedmia and Diabetes Mellitus")}
table(cases$PAD, useNA = "always")
View(cases2)
library(openxlsx);library(data.table);library(stringr);library(ggbiplot)
tec1 <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Techinc_1.xlsx")
nrow(tec1) # 141 Samples.
table(tec1$`Case/Control`) # 44 Controls / 97 Cases
samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Correspondencias.xlsx")
mm <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/20221013_Formulario_TablaMuestras_Gerard.xlsx", startRow = 5)
samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Correspondencias.xlsx")
mm <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/20221013_Formulario_TablaMuestras_Gerard.xlsx", startRow = 5)
mm <- mm[grep("HSP",mm$Nombre.de.la.muestra),]
mm2 <- mm[mm$Nombre.de.la.muestra%in%samples$SantPau_ID,]
length(intersect(samples$SantPau_ID, mm$Nombre.de.la.muestra))
samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Samples_Table.xlsx")
samples <- samples[!is.na(samples$M.Reads),] # 141 Samples sequenced.
range(samples$M.Reads, na.rm = T)
range(samples$M.Reads.Mapped, na.rm = T)
range(samples$M.Aligned.STAR, na.rm = T)
median(samples$M.Reads, na.rm = T)
median(samples$M.Reads.Mapped, na.rm = T)
median(samples$M.Aligned.STAR, na.rm = T)
p <- density(samples$M.Aligned.STAR) # Aligned uniquely
p2 <- density(samples$M.Reads) # Total
p3 <- density(samples$M.Reads.Mapped) # Mapped in bam file (samtools)
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
gtf <- fread("C://Users/Gerard/Downloads/gencode.v34.annotation.gtf.gz", header = F, nThread = 6)
gtf <- gtf[gtf$V3 == "gene",]
genes <- gtf[,c("V4","V5","V9")]
genes$gene_id <- str_split_fixed(genes$V9,";",7)[,1]
genes$gene_id <- gsub("gene_id","",genes$gene_id)
genes$gene_id <- gsub("\\..*","",genes$gene_id)
genes$gene_id <- gsub("[^A-Za-z0-9]","",genes$gene_id)
genes$gene_type <- str_split_fixed(genes$V9,";",7)[,2]
genes$gene_type <- gsub("gene_type","",genes$gene_type)
genes$gene_type <- gsub("[^A-Za-z0-9]","",genes$gene_type)
genes$gene_name <- str_split_fixed(genes$V9,";",7)[,3]
genes$gene_name <- gsub("gene_name","",genes$gene_name)
genes$gene_name <- gsub("[^A-Za-z0-9]","",genes$gene_name)
genes$level <- str_split_fixed(genes$V9,";",7)[,4]
genes$level <- gsub("level","",genes$level)
genes$level <- gsub("[^A-Za-z0-9]","",genes$level)
genes$length <- genes$V5-genes$V4
genes <- genes[,-c("V4","V5","V9")]
merged <- readRDS("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/salmon.merged.gene_counts.rds")
ff <- rownames(merged)
# Select quantified genes:
genes2 <- genes[genes$gene_id%in%ff,]
# Select by gene type:
genes2 <- genes2[genes2$gene_type == "proteincoding" | genes2$gene_type == "lncRNA",]
# Select by annotation level:
genes2 <- genes2[genes2$level == 1 | genes2$level == 2,]
# Remove genes with the same ID:
genes2 <- genes2[!(duplicated(genes2$gene_id) | duplicated(genes2$gene_id, fromLast = TRUE)), ]
# Order by gene id:
genes2 <- genes2[order(genes2$gene_id),]
counts <- assays(merged)$counts
# Select by annotation and type:
counts <- counts[rownames(counts)%in%genes2$gene_id,]
colnames(counts) <- gsub("_R1","",colnames(counts))
counts <- counts[order(rownames(counts)),]
dim(counts)
identical(genes2$gene_id,rownames(counts))
#fwrite(genes2[,c("gene_id","length")], "C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Lengths.txt", sep = "\t")
#fwrite(counts, "C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Counts.salmon.txt", sep = "\t", row.names = T)
counts <- fread("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Counts.salmon.txt")
lengths <- fread("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Lengths.txt")
lengths <- lengths$length/1000
rnames <- counts$V1
counts <- counts[,-1]
rownames(counts) <- rnames
r_tpm <- function(dfr,len)
{
dfr1 <- sweep(dfr,1,len,`/`)
sc.f <- colSums(dfr1)/(10^6)
return(sweep(dfr1,2,sc.f,`/`))
}
counts.tpm <- as.data.frame(r_tpm(counts, lengths))
xist <- genes2[genes2$gene_name=="XIST",]$gene_id
counts.sex.f <- counts.tpm[rownames(counts.tpm)%in%xist,]
y.gene <- c("SRY","ZFY","RPS4Y1","AMELY","TBL1Y","PCDH11Y","TGIF2LY","TSPY1","TSPY2","AZFa","USP9Y","DDX3Y","UTY","TB4Y","AZFb","CYorf15","RPS4Y2","EIF1AY","KDM5D","XKRY","PRY","PRY2","HSFY1","HSFY2","RBMY1A1","AZFc","DAZ1","DAZ2","DAZ3","DAZ4","CDY1","CDY2","VCY1","VCY2")
y.list <- genes2[genes2$gene_name%in%y.gene,]$gene_id
counts.sex.m <- counts.tpm[rownames(counts.tpm)%in%y.list,]
# Combine the XIST gene with the mean expression of all Y chromosome genes:
counts.sex <- rbind(counts.sex.f, data.frame(t(colMeans(counts.sex.m))))
counts.sex <- as.data.frame(t(counts.sex))
colnames(counts.sex) <- c("XIST","Chromosome_Y")
ggplot(counts.sex, aes(x = XIST, y = Chromosome_Y)) +
theme_bw() +
geom_point(colour = "blue") +
geom_point(data = counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),],
colour = "red",
size = 3) +
ggtitle("Gender RNAseq") +
xlim(0, 350) + ylim(0, 20) +
theme(plot.title = element_text(hjust = 0.5))
ggsave("C://Users/Gerard/Downloads/Test2.png", height = 10)
counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),]
counts.sex$Sex.Gene <- ifelse(counts.sex$XIST > 300 | counts.sex$Chromosome_Y < 2, 2, 1 )
View(counts.sex)
sex <- read.xlsx("C://Users/Gerard/Downloads/20221115_Datos Pacientes.xlsx")
sex <- sex[2:nrow(sex),]
identical(rownames(counts.sex), sex$Muestra)
counts.sex <- cbind(counts.sex, sex$SEXO)
counts.sex[!counts.sex$Sex.Gene == counts.sex$`sex$SEXO`,]
counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),]
library(openxlsx);library(ggplot2)
bio <- read.xlsx("C://Users/Gerard/Downloads/20221115_Datos Pacientes.xlsx")
bio <- bio[2:nrow(bio),]
bio$SEXO <- ifelse(bio$SEXO == 1, "Man","Woman")
cases <- bio[bio$Status == "Case",]
controls <- bio[bio$Status == "Control",]
cases2 <- cases[,7:ncol(cases)]
View(cases)
colSums(is.na(bio))
colSums(is.na(bio))
table(bio$SEXO, bio$Status)
ggplot(data = bio, aes(x = Status, y = age)) +
geom_boxplot()
ggplot(bio, aes(age, colour = Status)) + geom_density()
table(cases$TIPOANEURISMA, useNA = "always")
table(controls$Pathology, useNA = "always")
table(cases$symptomatic, useNA = "always")
bio <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/20221115_Datos Pacientes.xlsx")
bio <- bio[2:nrow(bio),]
bio$SEXO <- ifelse(bio$SEXO == 1, "Man","Woman")
cases <- bio[bio$Status == "Case",]
controls <- bio[bio$Status == "Control",]
cases2 <- cases[,7:ncol(cases)]
cases2
View(cases2)
View(bio)
table(controls$Pathology, useNA = "always")
table(cases$symptomatic, useNA = "always")
if(identical(bio[is.na(bio$hypertension),]$Muestra, bio[is.na(bio$dyslipidemia),]$Muestra) == TRUE & identical(bio[is.na(bio$dyslipidemia),]$Muestra, bio[is.na(bio$diabetes.mellitus),]$Muestra) == TRUE){
print("The 19 samples with NAs are the same for Hypertension, Dyslipedmia and Diabetes Mellitus")}
library(openxlsx);library(data.table);library(stringr);library(ggbiplot)
tec1 <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Techinc_1.xlsx")
nrow(tec1) # 141 Samples.
table(tec1$`Case/Control`) # 44 Controls / 97 Cases
samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Correspondencias.xlsx")
mm <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/20221013_Formulario_TablaMuestras_Gerard.xlsx", startRow = 5)
mm <- mm[grep("HSP",mm$Nombre.de.la.muestra),]
mm2 <- mm[mm$Nombre.de.la.muestra%in%samples$SantPau_ID,]
length(intersect(samples$SantPau_ID, mm$Nombre.de.la.muestra))
samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Samples_Table.xlsx")
samples <- samples[!is.na(samples$M.Reads),] # 141 Samples sequenced.
range(samples$M.Reads, na.rm = T)
range(samples$M.Reads.Mapped, na.rm = T)
range(samples$M.Aligned.STAR, na.rm = T)
median(samples$M.Reads, na.rm = T)
median(samples$M.Reads.Mapped, na.rm = T)
median(samples$M.Aligned.STAR, na.rm = T)
p <- density(samples$M.Aligned.STAR) # Aligned uniquely
p2 <- density(samples$M.Reads) # Total
p3 <- density(samples$M.Reads.Mapped) # Mapped in bam file (samtools)
plot(density(samples$M.Aligned.STAR), main = "Density Plot",ylim = range(p$y, p2$y, p3$y), xlim = range(p$x, p2$x, p3$x), col = "green")
lines(density(samples$M.Reads), col = "blue")
lines(density(samples$M.Reads.Mapped), col = "red")
legend("topright",legend=c("Aligned STAR","Total Reads","Mapped Samtools"), col = c("green","blue","red"), lty = 1, cex = 0.8, bty = "n", box.lty = 0)
table(cut(samples$M.Aligned.STAR, breaks=c(0,5,10,20,30,max(samples$M.Aligned.STAR))))
gtf <- fread("C://Users/Gerard/Downloads/gencode.v34.annotation.gtf.gz", header = F, nThread = 6)
gtf <- gtf[gtf$V3 == "gene",]
genes <- gtf[,9]
genes$gene_id <- str_split_fixed(genes$V9,";",7)[,1]
genes$gene_id <- gsub("gene_id","",genes$gene_id)
genes$gene_id <- gsub("\\..*","",genes$gene_id)
genes$gene_id <- gsub("[^A-Za-z0-9]","",genes$gene_id)
genes$gene_type <- str_split_fixed(genes$V9,";",7)[,2]
genes$gene_type <- gsub("gene_type","",genes$gene_type)
genes$gene_type <- gsub("[^A-Za-z0-9]","",genes$gene_type)
genes$gene_name <- str_split_fixed(genes$V9,";",7)[,3]
genes$gene_name <- gsub("gene_name","",genes$gene_name)
genes$gene_name <- gsub("[^A-Za-z0-9]","",genes$gene_name)
genes$level <- str_split_fixed(genes$V9,";",7)[,4]
genes$level <- gsub("level","",genes$level)
genes$level <- gsub("[^A-Za-z0-9]","",genes$level)
genes <- genes[,-c("V9")]
merged <- readRDS("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/salmon.merged.gene_counts.rds")
#merged <- readRDS("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/salmon.merged.gene_counts_length_scaled.rds")
#merged <- readRDS("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/salmon.merged.transcript_counts.rds")
ff <- rownames(merged)
genes2 <- genes[genes$gene_id%in%ff,]
#write.xlsx(table(genes2$gene_type), "C://Users/Gerard/Desktop/AAA/RNAseq/Gene.Types.xlsx", col.names = F)
#write.xlsx(table(genes2$level), "C://Users/Gerard/Desktop/AAA/RNAseq/Annot.Levels.xlsx", col.names = F)
genes2 <- genes2[genes2$gene_type == "proteincoding" | genes2$gene_type == "lncRNA",]
genes2 <- genes2[genes2$level == 1 | genes2$level == 2,]
#corr <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Correspondencias.xlsx")
#fc <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/FlowCellType Date.xlsx", sheet = 1)
#s1 <- fc$S1
#sp <- fc$SP
#corr$FC <- ""
#corr[corr$Seq_ID%in%s1,]$FC <- "S1"
#corr[corr$Seq_ID%in%sp,]$FC <- "SP"
#dates <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/FlowCellType Date.xlsx", detectDates = T, sheet = 2)
#corr$Date <- ""
#dd1 <- dates$`2022-08-19`
#dd2 <- dates$`2022-08-29`
#corr[corr$Seq_ID%in%dd1,]$Date <- "2022-08-19"
#corr[corr$Seq_ID%in%dd2,]$Date <- "2022-08-29"
#plate <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/BatchPlate.xlsx")
#corr2 <- merge(corr, plate[,c("Seq_ID","Batch")], by = "Seq_ID")
#case <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/CaseControl.xlsx")
#corr3 <- merge(corr2, case[,c("SantPau_ID","Case")], by = "SantPau_ID")
# Add GC:
#samples <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Samples_Table.xlsx")
#samples <- samples[!is.na(samples$M.Reads),]
#samples$Sample.Name <- gsub("_R1","",samples$Sample.Name)
#colnames(samples)[colnames(samples) == '%.GC'] <- "GC_Mean"
#corr4 <- merge(corr3, samples[,c("Sample.Name","GC_Mean")], by.x = "SantPau_ID", by.y = "Sample.Name")
# Add RIN, DV200 and Qubit:
#rin <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/RIN.xlsx")
#corr_def <- merge(corr4, rin[,c("Sample.ID", "RIN", "DV200", "Qubit")], by.x = "SantPau_ID", by.y = "Sample.ID")
#write.xlsx(corr_def, "C://Users/Gerard/Desktop/AAA/RNAseq/Tables/Technical_CompleteV2.xlsx")
#names(corr_def)
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
gtf <- fread("C://Users/Gerard/Downloads/gencode.v34.annotation.gtf.gz", header = F, nThread = 6)
gtf <- gtf[gtf$V3 == "gene",]
genes <- gtf[,c("V4","V5","V9")]
genes$gene_id <- str_split_fixed(genes$V9,";",7)[,1]
genes$gene_id <- gsub("gene_id","",genes$gene_id)
genes$gene_id <- gsub("\\..*","",genes$gene_id)
genes$gene_id <- gsub("[^A-Za-z0-9]","",genes$gene_id)
genes$gene_type <- str_split_fixed(genes$V9,";",7)[,2]
genes$gene_type <- gsub("gene_type","",genes$gene_type)
genes$gene_type <- gsub("[^A-Za-z0-9]","",genes$gene_type)
genes$gene_name <- str_split_fixed(genes$V9,";",7)[,3]
genes$gene_name <- gsub("gene_name","",genes$gene_name)
genes$gene_name <- gsub("[^A-Za-z0-9]","",genes$gene_name)
genes$level <- str_split_fixed(genes$V9,";",7)[,4]
genes$level <- gsub("level","",genes$level)
genes$level <- gsub("[^A-Za-z0-9]","",genes$level)
genes$length <- genes$V5-genes$V4
genes <- genes[,-c("V4","V5","V9")]
merged <- readRDS("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/salmon.merged.gene_counts.rds")
ff <- rownames(merged)
# Select quantified genes:
genes2 <- genes[genes$gene_id%in%ff,]
# Select by gene type:
genes2 <- genes2[genes2$gene_type == "proteincoding" | genes2$gene_type == "lncRNA",]
# Select by annotation level:
genes2 <- genes2[genes2$level == 1 | genes2$level == 2,]
# Remove genes with the same ID:
genes2 <- genes2[!(duplicated(genes2$gene_id) | duplicated(genes2$gene_id, fromLast = TRUE)), ]
# Order by gene id:
genes2 <- genes2[order(genes2$gene_id),]
counts <- assays(merged)$counts
# Select by annotation and type:
counts <- counts[rownames(counts)%in%genes2$gene_id,]
colnames(counts) <- gsub("_R1","",colnames(counts))
counts <- counts[order(rownames(counts)),]
dim(counts)
identical(genes2$gene_id,rownames(counts))
#fwrite(genes2[,c("gene_id","length")], "C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Lengths.txt", sep = "\t")
#fwrite(counts, "C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Counts.salmon.txt", sep = "\t", row.names = T)
counts <- fread("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Counts.salmon.txt")
lengths <- fread("C://Users/Gerard/Desktop/AAA/RNAseq/Gene_counts/Lengths.txt")
lengths <- lengths$length/1000
rnames <- counts$V1
counts <- counts[,-1]
rownames(counts) <- rnames
r_tpm <- function(dfr,len)
{
dfr1 <- sweep(dfr,1,len,`/`)
sc.f <- colSums(dfr1)/(10^6)
return(sweep(dfr1,2,sc.f,`/`))
}
counts.tpm <- as.data.frame(r_tpm(counts, lengths))
xist <- genes2[genes2$gene_name=="XIST",]$gene_id
counts.sex.f <- counts.tpm[rownames(counts.tpm)%in%xist,]
y.gene <- c("SRY","ZFY","RPS4Y1","AMELY","TBL1Y","PCDH11Y","TGIF2LY","TSPY1","TSPY2","AZFa","USP9Y","DDX3Y","UTY","TB4Y","AZFb","CYorf15","RPS4Y2","EIF1AY","KDM5D","XKRY","PRY","PRY2","HSFY1","HSFY2","RBMY1A1","AZFc","DAZ1","DAZ2","DAZ3","DAZ4","CDY1","CDY2","VCY1","VCY2")
y.list <- genes2[genes2$gene_name%in%y.gene,]$gene_id
counts.sex.m <- counts.tpm[rownames(counts.tpm)%in%y.list,]
# Combine the XIST gene with the mean expression of all Y chromosome genes:
counts.sex <- rbind(counts.sex.f, data.frame(t(colMeans(counts.sex.m))))
counts.sex <- as.data.frame(t(counts.sex))
colnames(counts.sex) <- c("XIST","Chromosome_Y")
ggplot(counts.sex, aes(x = XIST, y = Chromosome_Y)) +
theme_bw() +
geom_point(colour = "blue") +
geom_point(data = counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),],
colour = "red",
size = 3) +
ggtitle("Gender RNAseq") +
xlim(0, 350) + ylim(0, 20) +
theme(plot.title = element_text(hjust = 0.5))
ggsave("C://Users/Gerard/Downloads/Test2.png", height = 10)
counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),]
counts.sex$Sex.Gene <- ifelse(counts.sex$XIST > 300 | counts.sex$Chromosome_Y < 2, 2, 1 )
sex <- read.xlsx("C://Users/Gerard/Downloads/20221115_Datos Pacientes.xlsx")
sex <- sex[2:nrow(sex),]
identical(rownames(counts.sex), sex$Muestra)
counts.sex <- cbind(counts.sex, sex$SEXO)
counts.sex[!counts.sex$Sex.Gene == counts.sex$`sex$SEXO`,]
counts.sex$Sex.Gene <- ifelse(counts.sex$XIST > 300 | counts.sex$Chromosome_Y < 2, 2, 1 )
counts.sex %>%
group_by(sex$SEXO) %>%
summarise_at(vars(XIST, Chromosome_Y), list(name = range))
#cc <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Techinc_1.xlsx")
#group <- cc[,c("Case/Control")]
# Check they have the same order:
#identical(colnames(counts),cc$Nombre.de.la.muestra)
#y <- DGEList(counts, group = group)
#dim(y)
#y2 <- calcNormFactors(y)
#cc <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Techinc_1.xlsx")
#group <- cc[,c("Nombre.de.la.muestra","Case/Control")]
#colnames(group) <- c("ID","Status")
#rownames(group) <- group$ID
#group$Status <- factor(group$Status, levels = c("1","0"), labels = c("Case","Control"))
#group$Status <- relevel(group$Status, ref = "Control")
# Check they have the same order:
#identical(rownames(group),colnames(counts))
#all(rownames(group$ID) == colnames(counts))
#y <- DESeqDataSetFromMatrix(counts, colData = group, design = ~ Status)
#dim(y)
#keep <- rowSums(counts(y)) >= 10
#y <- y[keep,]
#counts(y)
counts.tpm <- as.data.frame(r_tpm(counts, lengths))
tec2 <- read.xlsx("C://Users/Gerard/Desktop/AAA/RNAseq/Tables/Technical_CompleteV2.xlsx")
cc <- tec2[,c("Case")]
cc[cc == 1] <- "Case"
cc[cc == 0] <- "Control"
counts.tpm <- t(counts.tpm)
# Remove genes that have 0 variability:
counts_var <- counts.tpm[,apply(counts.tpm, 2, var, na.rm=TRUE) != 0]
my_pca <- prcomp(counts_var, center = T, scale. = T)
plot(my_pca, main = "Variance Explained")
plot(cumsum(my_pca$sdev^2 / sum(my_pca$sdev^2)), type="b", ylab = "Cummulative proportion of Variance Explained")
ggbiplot(my_pca, labels = rownames(counts_var), groups = cc, var.axes = F, obs.scale = 1, var.scale = 1) +
scale_color_discrete(name = "") +
theme(legend.direction = "horizontal", legend.position = "top")
my_pca
my_pca$x
plot(cumsum(my_pca$sdev^2 / sum(my_pca$sdev^2)), type="b", ylab = "Cummulative proportion of Variance Explained")
sex <- read.xlsx("C://Users/Gerard/Downloads/20221115_Datos Pacientes.xlsx")
sex <- sex[2:nrow(sex),]
identical(rownames(counts.sex), sex$Muestra)
counts.sex <- cbind(counts.sex, sex$SEXO)
counts.sex[!counts.sex$Sex.Gene == counts.sex$`sex$SEXO`,]
counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),]
counts.sex[rownames(counts.sex) %in% c("HSP214", "HSP217"),]
library(openxlsx)
library(openxlsx);library(data.table);library(stringr);library(ggbiplot)
install.packages("ggbiplot")
library(openxlsx);library(data.table);library(stringr);library(ggbiplot)
library(devtools)
install.packages("devtools")
install_github("vqv/ggbiplot")
library(devtools)
install_github("vqv/ggbiplot")
library(openxlsx);library(data.table);library(stringr);library(ggbiplot)
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
install.packages("edgeR")
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
BiocManager::install("DESeq2")
library(edgeR);library(openxlsx);library(data.table);library(DESeq2);library(tximport);library(stringr);library(ggbiplot);library(dplyr)
BiocManager::install("tximport")
